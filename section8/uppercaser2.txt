Read:为sys_read内核调用设置寄存器。调用sys_read来从标准输入中读入。
	满满一缓冲区字符。
	测试EOF
	if我们到了文件的结尾，跳到Exit
	
	将寄存器设置为一个扫描一个缓冲区的指针。
Scan：测试缓冲区指针处的字符，判断它是否为小写字符。
	if他不是一个小写字符，跳过转换。
	通过将字符与20h相减来将其转换为对应的大写字符。
	递减缓冲区指针。
	if缓冲区仍有字符，跳到标号Scan处。
	
Write:为写内核调用设置寄存器。
	调用sys_write将处理后的缓冲区内容写到标准输出。
	跳回到标号Read处，然后获取另一个充满字符的缓冲区。

Exit：为通过sys_exit来终止程序而设置寄存器。
	调用sys_exit.


设置具体的操作
Read:为sys_read内核调用设置寄存器。
	调用sys_read从标准输入中读入满满一缓冲区的字符。
	将读入的字符数量存放到esi寄存器中。
	测试EOF（eax=0）。
	if我们到了文件的结尾，跳到Exit
	
	将缓冲区地址放到ebp中。
	将读入缓冲区的字符数量放到ecx寄存器中。
Scan：将[ebp+ecx]处的集自己与'a'相比较。
	if该字节在ASCII表中的顺序比'a'小,跳转到标号Next处。
	将[ebp+ecx]处的字节与'z'比较。
	if该字节在ASCII表中的顺序比'z'大，跳转到标号Next处。
	通过将该该字节与20h相减来将其转换为相应的大写字符。

Next：将ecx寄存器递减1.
	if不为零，跳转到标号Scan。
	
Write：为写内核调用设置寄存器。
	调用sys_write将处理后的缓冲区内容写道标准输出。
	跳回到标号Read处，然后获取另一个充满字符的缓冲区。

Exit：为通过sys_exit调用来终止程序设置寄存器。
	调用sys_exit。


